/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package Magda.Parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int INCLUDE = 10;
  /** RegularExpression Id. */
  int LET = 11;
  /** RegularExpression Id. */
  int NULL = 12;
  /** RegularExpression Id. */
  int TRUE = 13;
  /** RegularExpression Id. */
  int FALSE = 14;
  /** RegularExpression Id. */
  int SUPER = 15;
  /** RegularExpression Id. */
  int VOID = 16;
  /** RegularExpression Id. */
  int THIS = 17;
  /** RegularExpression Id. */
  int BEGIN = 18;
  /** RegularExpression Id. */
  int END = 19;
  /** RegularExpression Id. */
  int NEW = 20;
  /** RegularExpression Id. */
  int ABSTRACT = 21;
  /** RegularExpression Id. */
  int OVERRIDE = 22;
  /** RegularExpression Id. */
  int REQUIRED = 23;
  /** RegularExpression Id. */
  int OPTIONAL = 24;
  /** RegularExpression Id. */
  int INITIALIZES = 25;
  /** RegularExpression Id. */
  int IF = 26;
  /** RegularExpression Id. */
  int ELSE = 27;
  /** RegularExpression Id. */
  int WHILE = 28;
  /** RegularExpression Id. */
  int MIXIN = 29;
  /** RegularExpression Id. */
  int OF = 30;
  /** RegularExpression Id. */
  int WHERE = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int NATIVEINSTRUCTION = 33;
  /** RegularExpression Id. */
  int ID = 34;
  /** RegularExpression Id. */
  int STRING_LITERAL = 35;
  /** RegularExpression Id. */
  int BYTE_LITERAL = 36;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 37;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 38;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 9>",
    "\"include\"",
    "\"let\"",
    "\"null\"",
    "\"true\"",
    "\"false\"",
    "\"super\"",
    "\"void\"",
    "\"this\"",
    "\"begin\"",
    "\"end\"",
    "\"new\"",
    "\"abstract\"",
    "\"override\"",
    "\"required\"",
    "\"optional\"",
    "\"initializes\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"mixin\"",
    "\"of\"",
    "\"where\"",
    "\"return\"",
    "<NATIVEINSTRUCTION>",
    "<ID>",
    "<STRING_LITERAL>",
    "<BYTE_LITERAL>",
    "<INTEGER_LITERAL>",
    "<FLOAT_LITERAL>",
    "\".\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"==\"",
    "\"=\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
  };

}
